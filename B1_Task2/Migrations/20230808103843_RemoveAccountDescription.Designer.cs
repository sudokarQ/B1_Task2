// <auto-generated />
using System;
using B1_Task2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace B1_Task2.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20230808103843_RemoveAccountDescription")]
    partial class RemoveAccountDescription
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("B1_Task2.Model.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("B1_Task2.Model.DataEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountCode")
                        .HasColumnType("int");

                    b.Property<decimal>("BeginningCreditBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeginningDebitBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CreditTurnover")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DebitTurnover")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EndingCreditBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EndingDebitBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("DataEntries");
                });

            modelBuilder.Entity("B1_Task2.Model.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("B1_Task2.Model.DataEntry", b =>
                {
                    b.HasOne("B1_Task2.Model.File", null)
                        .WithMany("DataEntries")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("B1_Task2.Model.File", b =>
                {
                    b.HasOne("B1_Task2.Model.Bank", null)
                        .WithMany("Files")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("B1_Task2.Model.Bank", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("B1_Task2.Model.File", b =>
                {
                    b.Navigation("DataEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
